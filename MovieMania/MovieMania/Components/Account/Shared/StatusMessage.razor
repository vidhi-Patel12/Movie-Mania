@if (!string.IsNullOrEmpty(DisplayMessage))
{
    // Determine the message type based on its content
    var isErrorMessage = DisplayMessage.StartsWith("Error");
    var isSuccessMessage = DisplayMessage.StartsWith("Success");
    var statusMessageClass = DisplayMessage.StartsWith("Error") ? "danger" :
                             DisplayMessage.StartsWith("Success") ? "green" : "info";

    if (isErrorMessage)
    {
        <div class="alert alert-@statusMessageClass" role="alert" style="width: 160%; margin: auto;">
            @DisplayMessage
        </div>
    }
    else if (isSuccessMessage)
    {
        <div class="alert alert-@statusMessageClass" role="alert" style="width: 160%; margin: auto;">
            @DisplayMessage
        </div>
    }   
}

@code {
    private string? messageFromCookie;

    [Parameter]
    public string? Message { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage => Message ?? messageFromCookie;

    protected override void OnInitialized()
    {
        messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

        if (messageFromCookie is not null)
        {
            HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
        }
    }
}
